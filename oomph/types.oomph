export class ObjectType(Str name, bool refcounted)
export class FunctionType(List[ObjectType] argtypes)

export class LocalVariable(ObjectType type)
export class BuiltinVariable(Str name, FunctionType type)
export class ThisFileVariable(Str name, FunctionType type)

# TODO: global (but const) variables
export class Builtins(ObjectType STR, BuiltinVariable PRINT):
    meth get_types() -> List[ObjectType]:
        let result = new List[ObjectType]()
        result.push(self.STR)
        return result

    meth get_variables() -> List[BuiltinVariable]:
        let result = new List[BuiltinVariable]()
        result.push(self.PRINT)
        return result

# TODO: custom constructors
export func create_builtins() -> Builtins:
    let STR = new ObjectType("Str", true)
    let print_args = new List[ObjectType]()
    print_args.push(STR)
    return new Builtins(STR, new BuiltinVariable("print", new FunctionType(print_args)))
